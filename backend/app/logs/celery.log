[2021-08-05 18:27:48,685: INFO/MainProcess] Connected to redis://redis:6379/0
[2021-08-05 18:27:48,696: INFO/MainProcess] mingle: searching for neighbors
[2021-08-05 18:27:49,719: INFO/MainProcess] mingle: all alone
[2021-08-05 18:27:49,752: INFO/MainProcess] celery@8f893ff79081 ready.
[2021-08-05 18:28:19,760: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/celery/worker/consumer/consumer.py", line 326, in start
    blueprint.start(self)
  File "/usr/local/lib/python3.9/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/usr/local/lib/python3.9/site-packages/celery/worker/consumer/consumer.py", line 618, in start
    c.loop(*c.loop_args())
  File "/usr/local/lib/python3.9/site-packages/celery/worker/loops.py", line 81, in asynloop
    next(loop)
  File "/usr/local/lib/python3.9/site-packages/kombu/asynchronous/hub.py", line 361, in create_loop
    cb(*cbargs)
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 1128, in on_readable
    self.cycle.on_readable(fileno)
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 398, in on_readable
    chan.handlers[type]()
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 733, in _receive
    ret.append(self._receive_one(c))
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 743, in _receive_one
    response = c.parse_response()
  File "/usr/local/lib/python3.9/site-packages/redis/client.py", line 3505, in parse_response
    response = self._execute(conn, conn.read_response)
  File "/usr/local/lib/python3.9/site-packages/redis/client.py", line 3479, in _execute
    return command(*args, **kwargs)
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 739, in read_response
    response = self._parser.read_response()
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 324, in read_response
    raw = self._buffer.readline()
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 256, in readline
    self._read_from_socket()
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 201, in _read_from_socket
    raise ConnectionError(SERVER_CLOSED_CONNECTION_ERROR)
redis.exceptions.ConnectionError: Connection closed by server.
[2021-08-05 18:28:19,766: WARNING/MainProcess] /usr/local/lib/python3.9/site-packages/celery/worker/consumer/consumer.py:361: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2021-08-05 18:28:19,791: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379/0: Error 111 connecting to redis:6379. Connection refused..
Trying again in 2.00 seconds... (1/100)

[2021-08-05 18:28:33,256: INFO/MainProcess] Connected to redis://redis:6379/0
[2021-08-05 18:28:33,266: INFO/MainProcess] mingle: searching for neighbors
[2021-08-05 18:28:34,289: INFO/MainProcess] mingle: all alone
[2021-08-05 18:28:34,321: INFO/MainProcess] celery@d494f8eb5f7c ready.
[2021-08-05 18:28:51,217: INFO/MainProcess] Connected to redis://redis:6379/0
[2021-08-05 18:28:51,226: INFO/MainProcess] mingle: searching for neighbors
[2021-08-05 18:28:52,248: INFO/MainProcess] mingle: all alone
[2021-08-05 18:28:52,263: INFO/MainProcess] celery@69bffac24d51 ready.
[2021-08-05 18:31:18,579: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/celery/worker/consumer/consumer.py", line 326, in start
    blueprint.start(self)
  File "/usr/local/lib/python3.9/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/usr/local/lib/python3.9/site-packages/celery/worker/consumer/consumer.py", line 618, in start
    c.loop(*c.loop_args())
  File "/usr/local/lib/python3.9/site-packages/celery/worker/loops.py", line 81, in asynloop
    next(loop)
  File "/usr/local/lib/python3.9/site-packages/kombu/asynchronous/hub.py", line 361, in create_loop
    cb(*cbargs)
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 1128, in on_readable
    self.cycle.on_readable(fileno)
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 398, in on_readable
    chan.handlers[type]()
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 733, in _receive
    ret.append(self._receive_one(c))
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 743, in _receive_one
    response = c.parse_response()
  File "/usr/local/lib/python3.9/site-packages/redis/client.py", line 3505, in parse_response
    response = self._execute(conn, conn.read_response)
  File "/usr/local/lib/python3.9/site-packages/redis/client.py", line 3479, in _execute
    return command(*args, **kwargs)
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 739, in read_response
    response = self._parser.read_response()
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 324, in read_response
    raw = self._buffer.readline()
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 256, in readline
    self._read_from_socket()
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 201, in _read_from_socket
    raise ConnectionError(SERVER_CLOSED_CONNECTION_ERROR)
redis.exceptions.ConnectionError: Connection closed by server.
[2021-08-05 18:31:18,587: WARNING/MainProcess] /usr/local/lib/python3.9/site-packages/celery/worker/consumer/consumer.py:361: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2021-08-05 18:31:18,601: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379/0: Error 111 connecting to redis:6379. Connection refused..
Trying again in 2.00 seconds... (1/100)

[2021-08-05 18:31:30,710: INFO/MainProcess] Connected to redis://redis:6379/0
[2021-08-05 18:31:30,720: INFO/MainProcess] mingle: searching for neighbors
[2021-08-05 18:31:31,741: INFO/MainProcess] mingle: all alone
[2021-08-05 18:31:31,756: INFO/MainProcess] celery@69bffac24d51 ready.
[2021-08-05 18:31:37,240: INFO/MainProcess] Events of group {task} enabled by remote.
[2021-08-05 18:33:56,566: INFO/MainProcess] Connected to redis://redis:6379/0
[2021-08-05 18:33:56,578: INFO/MainProcess] mingle: searching for neighbors
[2021-08-05 18:33:57,601: INFO/MainProcess] mingle: all alone
[2021-08-05 18:33:57,618: INFO/MainProcess] celery@996280a507ad ready.
[2021-08-05 18:34:03,023: INFO/MainProcess] Events of group {task} enabled by remote.
[2021-08-05 18:35:30,219: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/celery/worker/consumer/consumer.py", line 326, in start
    blueprint.start(self)
  File "/usr/local/lib/python3.9/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/usr/local/lib/python3.9/site-packages/celery/worker/consumer/consumer.py", line 618, in start
    c.loop(*c.loop_args())
  File "/usr/local/lib/python3.9/site-packages/celery/worker/loops.py", line 81, in asynloop
    next(loop)
  File "/usr/local/lib/python3.9/site-packages/kombu/asynchronous/hub.py", line 361, in create_loop
    cb(*cbargs)
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 1128, in on_readable
    self.cycle.on_readable(fileno)
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 398, in on_readable
    chan.handlers[type]()
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 733, in _receive
    ret.append(self._receive_one(c))
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 743, in _receive_one
    response = c.parse_response()
  File "/usr/local/lib/python3.9/site-packages/redis/client.py", line 3505, in parse_response
    response = self._execute(conn, conn.read_response)
  File "/usr/local/lib/python3.9/site-packages/redis/client.py", line 3479, in _execute
    return command(*args, **kwargs)
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 739, in read_response
    response = self._parser.read_response()
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 324, in read_response
    raw = self._buffer.readline()
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 256, in readline
    self._read_from_socket()
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 201, in _read_from_socket
    raise ConnectionError(SERVER_CLOSED_CONNECTION_ERROR)
redis.exceptions.ConnectionError: Connection closed by server.
[2021-08-05 18:35:30,225: WARNING/MainProcess] /usr/local/lib/python3.9/site-packages/celery/worker/consumer/consumer.py:361: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2021-08-05 18:35:30,242: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379/0: Error 111 connecting to redis:6379. Connection refused..
Trying again in 2.00 seconds... (1/100)

[2021-08-05 18:35:39,686: INFO/MainProcess] Connected to redis://redis:6379/0
[2021-08-05 18:35:39,696: INFO/MainProcess] mingle: searching for neighbors
[2021-08-05 18:35:40,720: INFO/MainProcess] mingle: all alone
[2021-08-05 18:35:40,735: INFO/MainProcess] celery@996280a507ad ready.
[2021-08-05 18:35:46,230: INFO/MainProcess] Events of group {task} enabled by remote.
[2021-08-05 18:37:07,007: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/celery/worker/consumer/consumer.py", line 326, in start
    blueprint.start(self)
  File "/usr/local/lib/python3.9/site-packages/celery/bootsteps.py", line 116, in start
    step.start(parent)
  File "/usr/local/lib/python3.9/site-packages/celery/worker/consumer/consumer.py", line 618, in start
    c.loop(*c.loop_args())
  File "/usr/local/lib/python3.9/site-packages/celery/worker/loops.py", line 81, in asynloop
    next(loop)
  File "/usr/local/lib/python3.9/site-packages/kombu/asynchronous/hub.py", line 361, in create_loop
    cb(*cbargs)
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 1128, in on_readable
    self.cycle.on_readable(fileno)
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 398, in on_readable
    chan.handlers[type]()
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 733, in _receive
    ret.append(self._receive_one(c))
  File "/usr/local/lib/python3.9/site-packages/kombu/transport/redis.py", line 743, in _receive_one
    response = c.parse_response()
  File "/usr/local/lib/python3.9/site-packages/redis/client.py", line 3505, in parse_response
    response = self._execute(conn, conn.read_response)
  File "/usr/local/lib/python3.9/site-packages/redis/client.py", line 3479, in _execute
    return command(*args, **kwargs)
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 739, in read_response
    response = self._parser.read_response()
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 324, in read_response
    raw = self._buffer.readline()
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 256, in readline
    self._read_from_socket()
  File "/usr/local/lib/python3.9/site-packages/redis/connection.py", line 201, in _read_from_socket
    raise ConnectionError(SERVER_CLOSED_CONNECTION_ERROR)
redis.exceptions.ConnectionError: Connection closed by server.
[2021-08-05 18:37:07,014: WARNING/MainProcess] /usr/local/lib/python3.9/site-packages/celery/worker/consumer/consumer.py:361: CPendingDeprecationWarning: 
In Celery 5.1 we introduced an optional breaking change which
on connection loss cancels all currently executed tasks with late acknowledgement enabled.
These tasks cannot be acknowledged as the connection is gone, and the tasks are automatically redelivered back to the queue.
You can enable this behavior using the worker_cancel_long_running_tasks_on_connection_loss setting.
In Celery 5.1 it is set to False by default. The setting will be set to True by default in Celery 6.0.

  warnings.warn(CANCEL_TASKS_BY_DEFAULT, CPendingDeprecationWarning)

[2021-08-05 18:37:17,015: INFO/MainProcess] Connected to redis://redis:6379/0
[2021-08-05 18:37:17,024: INFO/MainProcess] mingle: searching for neighbors
[2021-08-05 18:37:18,046: INFO/MainProcess] mingle: all alone
[2021-08-05 18:37:18,062: INFO/MainProcess] celery@996280a507ad ready.
[2021-08-05 18:37:23,504: INFO/MainProcess] Events of group {task} enabled by remote.
[2021-08-05 18:37:33,749: INFO/MainProcess] Task create_task[14b3c509-3a45-4ebe-a2e4-4c26bf84723d] received
[2021-08-05 18:37:33,927: INFO/MainProcess] Task create_task[6c305f95-cac3-400d-8694-54364606defa] received
[2021-08-05 18:37:34,557: INFO/MainProcess] Task create_task[f560c6bf-5ebf-4a14-a635-1594181886ac] received
[2021-08-05 18:37:41,344: INFO/MainProcess] Task create_task[5808a508-4d71-450c-a160-559c6e3e1ccd] received
[2021-08-05 18:37:43,757: INFO/ForkPoolWorker-1] Task create_task[14b3c509-3a45-4ebe-a2e4-4c26bf84723d] succeeded in 10.004403199999615s: True
[2021-08-05 18:37:51,361: INFO/ForkPoolWorker-4] Task create_task[5808a508-4d71-450c-a160-559c6e3e1ccd] succeeded in 10.011002400000507s: True
[2021-08-05 18:37:53,955: INFO/ForkPoolWorker-3] Task create_task[6c305f95-cac3-400d-8694-54364606defa] succeeded in 20.024137000000337s: True
[2021-08-05 18:38:04,593: INFO/ForkPoolWorker-2] Task create_task[f560c6bf-5ebf-4a14-a635-1594181886ac] succeeded in 30.033894500000315s: True
[2021-08-05 18:38:29,237: INFO/MainProcess] Task create_task[5ce923f7-1e03-4f63-a714-5e38a7f7f82e] received
[2021-08-05 18:38:39,251: INFO/ForkPoolWorker-1] Task create_task[5ce923f7-1e03-4f63-a714-5e38a7f7f82e] succeeded in 10.01123430000007s: True
[2021-08-05 18:38:57,886: INFO/MainProcess] Task create_task[7e4f04ea-1145-483c-9f14-be22f4e585c5] received
[2021-08-05 18:39:17,893: INFO/ForkPoolWorker-1] Task create_task[7e4f04ea-1145-483c-9f14-be22f4e585c5] succeeded in 20.00468929999988s: True
[2021-08-05 19:25:20,753: INFO/MainProcess] Task create_task[22def92a-c6cc-4a41-b496-4d0f9a6ef36b] received
[2021-08-05 19:25:30,768: INFO/ForkPoolWorker-1] Task create_task[22def92a-c6cc-4a41-b496-4d0f9a6ef36b] succeeded in 10.011429600001065s: True
